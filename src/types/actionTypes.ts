
export interface Action<T> {
    type: IActionType;
    payload: T;
}

export interface FormFieldPayload<T> {
    index?: number | string;
    key: T;
    value: string | any;
}

enum BasicType {
    INIT_STORE = 'ON_INIT',
    SET_NAVIGATION = 'SET_NAVIGATION',
    SET_LOADING = 'SET_LOADING',
}
enum AccountType {
    LOAD_ACCOUNT = 'LOAD_ACCOUNT',
    SET_ACCOUNT = 'SET_ACCOUNT',
}
enum TokenType {
    TOKEN_SET_TOTAL_SUPPLY = 'TOKEN_SET_TOTAL_SUPPLY',
    TOKEN_LOAD_TOTAL_SUPPLY = 'TOKEN_LOAD_TOTAL_SUPPLY',
}
enum GeyserType {
    GEYSER_SET_ALLOWANCE = 'GEYSER_SET_ALLOWANCE',
    GEYSER_SET_TOTAL_STAKED = 'GEYSER_SET_TOTAL_STAKED',
    GEYSER_SET_STAKED = 'GEYSER_SET_STAKED',
    GEYSER_SET_TOTAL_LOCKED = 'GEYSER_SET_TOTAL_LOCKED',
    GEYSER_SET_TOTAL_UNLOCKED = 'GEYSER_SET_TOTAL_UNLOCKED',
    GEYSER_LOAD_ALLOWANCE = 'GEYSER_LOAD_ALLOWANCE',
    GEYSER_LOAD_STAKED = 'GEYSER_LOAD_STAKED',
    GEYSER_LOAD_LOCKED = 'GEYSER_LOAD_LOCKED',
    GEYSER_APPROVE_TOKEN = 'GEYSER_APPROVE_TOKEN',
    GEYSER_GEYSER_TOKEN = 'GEYSER_GEYSER_TOKEN',
    GEYSER_UNGEYSER_TOKEN = 'GEYSER_UNGEYSER_TOKEN',
}
enum PoolType {
    POOL_APPROVE_TOKEN = 'POOL_APPROVE_TOKEN',
    POOL_APPROVE_TOKEN_SUCCESS = 'POOL_APPROVE_TOKEN_SUCCESS',
    POOL_STAKE = 'POOL_STAKE',
    POOL_WITHDRAW = 'POOL_WITHDRAW',
    POOL_HARVEST = 'POOL_HARVEST',
    POOL_EXIT = 'POOL_EXIT',
    POOL_GET_EARNED = 'POOL_GET_EARNED',
    POOL_GET_EARNED_SUCCESS = 'POOL_GET_EARNED_SUCCESS',
    POOL_GET_STAKED = 'POOL_GET_STAKED',
    POOL_GET_STAKED_SUCCESS = 'POOL_GET_STAKED_SUCCESS',
}

export type IActionType = 
    | BasicType
    | AccountType
    | TokenType
    | GeyserType
    | PoolType;

export const ActionType = {
    ...BasicType,
    ...AccountType,
    ...TokenType,
    ...GeyserType,
    ...PoolType,
};
